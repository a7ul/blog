{"data":{"site":{"siteMetadata":{"title":"Blog","author":"Atul R"}},"markdownRemark":{"id":"11763dc3-44b6-5734-8350-b587d12d9057","excerpt":"I recently started working at  Anyfin . As a new engineer on the team, I had to setup the entire development environment. Drawing my expectations from my previous work engagements I thought this would‚Ä¶","html":"<p>I recently started working at <a href=\"https://anyfin.com/en\" target=\"_blank\">Anyfin</a>. As a new engineer on the team, I had to setup the entire development environment. Drawing my expectations from my previous work engagements I thought this would take me a couple of days. But to my surprise I had a working setup of quite a few backend services written in NodeJS, Golang and Python along side the web site and portal (Javascript) in ~5hrs.\nThis post will explain on how we use Docker at Anyfin to setup a productive local development environment.</p>\n<p><strong>üëÆüèª‚ÄçCredit disclaimer:üö®</strong> <br/>\nThe entire credit for the setup goes to my colleagues: Kim, Niemi, Asparuh, Pepijn and Sven. I found the setup at Anyfin extremely awesome and hence wanted to share it with everyone.</p>\n<h1>Overview / Basic architecture</h1>\n<p>Lets say we have a set of services that have the following architecture.</p>\n<p><img src=\"/architecture-db724d868a0b5a242feee2678b1c9c04.svg\" alt=\"example architecture\"></p>\n<p>From the diagram we can see we have</p>\n<ul>\n<li>\n<p>NJS1 - NodeJS service running on port 7000 and dependent on the database Db1 (running on port 5433).</p>\n</li>\n<li>\n<p>Py1 - Python service running on port 9000 and dependent on the database Db1 (running on port 5433).</p>\n</li>\n<li>\n<p>Go1 - Golang service running on port 5000 and dependent on the database Db1 (running on port 5433).</p>\n</li>\n<li>\n<p>NJS2 - NodeJS service running on port 8000 and dependent on the database Db1 (running on port 5432).</p>\n</li>\n<li>\n<p>Py2 - Python service running on port 3000 and dependent on the database Db1 (running on port 5432).</p>\n</li>\n<li>\n<p>Web - A simple webpack based dev server for frontend running on port 8080.</p>\n</li>\n</ul>\n<p>PS: We want the services to be exposed on the said ports in the local environment so that they can communicate with each other via those.</p>","frontmatter":{"title":"üê≥ Simplified guide to using Docker for local development environment","date":"March 06, 2019","keywords":"docker, local, development, environment, guide, javascript","featuredImage":null},"fields":{"slug":"/docker-local-environment/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docker-local-environment/","previous":{"fields":{"slug":"/rate-limiter/"},"frontmatter":{"title":"üöß An alternative approach to building a simple API Rate limiter using NodeJS and Redis"}},"next":null}}