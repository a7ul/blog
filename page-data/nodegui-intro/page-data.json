{"componentChunkName":"component---src-templates-blog-post-js","path":"/nodegui-intro/","webpackCompilationHash":"8b67f8cb2431c1bdd5f3","result":{"data":{"site":{"siteMetadata":{"title":"Blog","author":"Atul R"}},"markdownRemark":{"id":"68b5f3f5-4e2b-52bf-858b-5040397af3db","excerpt":"We’re very excited to announce the launch of NodeGUI and React Desktop! 🎊 NodeGUI is an open source library for building cross platform native desktop applications with JavaScript and CSS like…","html":"<p>We’re very excited to announce the launch of <strong>NodeGUI</strong> and <strong>React Desktop</strong>! 🎊</p>\n<p><a href=\"https://github.com/nodegui/nodegui\">NodeGUI</a> is an open source library for building cross platform native desktop applications with JavaScript and CSS like styling. NodeGui apps can run on Mac, Windows, and Linux from a single codebase.</p>\n<p>NodeGUI is powered by Qt5 💚 which makes it CPU and memory efficient as compared to other chromium based solutions like electron. Don’t get me wrong 🤷🏽‍♂️, Electron is a great framework for building cross platform apps but suffers from performance and energy related issues due to heavy reliance on Chromium. NodeGui wants to incorporate everything that is good about Electron: The ease of development, freedom of styling, Native APIs, great documentation, etc. At the same time NodeGui aims to be memory and CPU efficient.</p>\n<p><a href=\"https://github.com/nodegui/react-desktop\">React Desktop</a> is a react renderer for NodeGUI. It aims to be what React Native is for mobile app development.</p>\n<p><strong>Repository links:</strong></p>\n<ul>\n<li><a href=\"https://github.com/nodegui/nodegui\">https://github.com/nodegui/nodegui</a></li>\n<li><a href=\"https://github.com/nodegui/react-desktop\">https://github.com/nodegui/react-desktop</a></li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>🧬 Cross platform. Should work on major Linux flavours, Windows and MacOS</li>\n<li>📉 Low CPU and memory footprint. Current CPU stays at 0% on idle and memory usage is under 20mb for a hello world program.</li>\n<li>💅 Styling with CSS (includes actual cascading). Also has full support for Flexbox layout (thanks to Yoga).</li>\n<li>✅ Complete Nodejs api support (Currently runs on Node v12.x - and is easily upgradable). Hence has access to all nodejs compatible npm modules.</li>\n<li>🎪 Native widget event listener support. supports all event available from Qt / NodeJs.</li>\n<li>💸 Can be used for Commercial applications.</li>\n<li>🕵️‍♂️ Decent Devtools support.</li>\n<li>📚 Decent documentation and website.</li>\n<li>🧙‍♂️ Decent documentation for contributors.</li>\n<li>🦹🏻‍♀️ Good support for dark mode (Thanks to QT).</li>\n<li>🏅First class Typescript support. (Works on regular JS projects too 😉).</li>\n</ul>\n<h1>NodeGUI</h1>\n<img src=\"/67593393e839ebc164220306631e2ede/nodegui.svg\" style=\"width:150px;display:block; margin:0 auto;\">\n<p>NodeGUI: <a href=\"https://www.npmjs.com/package/@nodegui/nodegui\">@nodegui/nodegui</a> is essentially native javascript bindings for <a href=\"https://www.qt.io/\">Qt</a>. Qt is a cross-platform C++ application development framework for desktop and various other platforms. The native Javascript bindings are written using <a href=\"https://nodejs.org/api/n-api.html\">N-API or node addon api</a>. This means applications written using NodeGUI <strong>DO NOT</strong> open up a browser instance and render the UI in it, instead all the widgets are natively rendered. Since NodeGUI is a native addon to NodeJs (extends Nodejs) you have complete access to Node APIs and all compatible npm modules. Also all debugging tools that you use with NodeJS can now be used with NodeGUI applications as well.</p>\n<p>A big motivation towards choosing Qt was that it provides APIs to style a widget using CSS (this includes actual cascading and not just inline styling). Flex box support to the existing amazing Qt stylesheet was added using <a href=\"https://github.com/facebook/yoga/\">Yoga</a>. Hence NodeGUI supports both paint and layout properties via CSS.</p>\n<p>Some screenshots of example apps that were built during development.</p>\n<div style=\"display:flex;flex-direction:row;justify-content:space-around;\">\n  <img src=\"/aa0133a07d7b6735125126a40fc97055/calculator_win.gif\" alt=\"win\" height=\"250px\">\n  <img src=\"/fc664cb2148c98d6c1405ee0832d38b3/calculator_linux.gif\" alt=\"linux\" height=\"250px\">\n  <img src=\"/361956edd4ce5434869892bef38bfeee/calculator_mac.gif\" alt=\"mac\" height=\"250px\">\n</div>\n<div><center><i><b>Calculator clone: win, linux &amp; mac</b></i></center></div>\n<h2>Try it out! 🧙‍♂️</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone https://github.com/nodegui/nodegui-starter\ncd nodegui-starter\nnpm install\nnpm run build\nnpm start</code></pre></div>\n<p>A simple hello world project looks like:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  QMainWindow<span class=\"token punctuation\">,</span>\n  QWidget<span class=\"token punctuation\">,</span>\n  QLabel<span class=\"token punctuation\">,</span>\n  FlexLayout\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@nodegui/nodegui\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> win <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QMainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> centralWidget <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QWidget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncentralWidget<span class=\"token punctuation\">.</span><span class=\"token function\">setObjectName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myroot\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootLayout <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FlexLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncentralWidget<span class=\"token punctuation\">.</span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span>rootLayout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> label <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QLabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlabel<span class=\"token punctuation\">.</span><span class=\"token function\">setObjectName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mylabel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlabel<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> label2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QLabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlabel2<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlabel2<span class=\"token punctuation\">.</span><span class=\"token function\">setInlineStyle</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  color: red;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrootLayout<span class=\"token punctuation\">.</span><span class=\"token function\">addWidget</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrootLayout<span class=\"token punctuation\">.</span><span class=\"token function\">addWidget</span><span class=\"token punctuation\">(</span>label2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwin<span class=\"token punctuation\">.</span><span class=\"token function\">setCentralWidget</span><span class=\"token punctuation\">(</span>centralWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwin<span class=\"token punctuation\">.</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    #myroot {\n      background-color: #009688;\n      height: '100%';\n      align-items: 'center';\n      justify-content: 'center';\n    }\n    #mylabel {\n      font-size: 16px;\n      font-weight: bold;\n    }\n  </span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwin<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>global <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>win <span class=\"token operator\">=</span> win<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//to prevent gc</span></code></pre></div>\n<h1>React Desktop</h1>\n<div style=\"display:flex; flex-direction:row; justify-content: center;align-items:center;\">\n  <img src=\"/67593393e839ebc164220306631e2ede/nodegui.svg\" style=\"width:150px;display:block;\">\n+\n  <img src=\"/00d04da36188f9fec41de80be4baf8ad/react.gif\" style=\"width:150px;display:block;\">\n</div>\n<p>React Desktop: <a href=\"https://www.npmjs.com/package/@nodegui/react-desktop\">@nodegui/react-desktop</a> is a ⚛️ react renderer for NodeGUI. This means you can create you views using React components similar to that of React Native. React Desktop is powered by React ⚛️ and Qt5 💚 which makes it easy to build performant, native and cross-platform desktop applications. With react desktop you have complete access to all React APIs including hooks. React Desktop makes it much more easy to manage all the views via Javascript.</p>\n<h2>Try it out! 🧙‍♂️</h2>\n<p>The same example we saw above in NodeGui would look like this in react-desktop</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone https://github.com/nodegui/react-desktop-starter\ncd react-desktop-starter\nnpm install\nnpm run build\nnpm start</code></pre></div>\n<p>A simple hello world project looks like:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Renderer<span class=\"token punctuation\">,</span> View<span class=\"token punctuation\">,</span> Text<span class=\"token punctuation\">,</span> Window <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nodegui/react-desktop'</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Window styleSheet<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styleSheet<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>View id<span class=\"token operator\">=</span><span class=\"token string\">\"myroot\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text id<span class=\"token operator\">=</span><span class=\"token string\">\"mylabel\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'color: red;'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">World</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Window<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> styleSheet <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  #myroot {\n    background-color: #009688;\n    height: '100%';\n    align-items: 'center';\n    justify-content: 'center';\n  }\n  #mylabel {\n    font-size: 16px;\n    font-weight: bold;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span>\n\nRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The output looks like this:</p>\n<div style=\"display:flex;flex-direction:row;justify-content:space-around;\">\n  <img src=\"/434ea0d67369ef0de94b8b547f8535cb/output.gif\" alt=\"win\" height=\"250px\">\n</div>\n<br/>\n<blockquote>\n<p>Disclaimer: Please keep in mind that both NodeGui and React Desktop are at their infancy stage. Hence, I would hold on for some more time before using it in production. This post is primarily aimed at encouraging contributions to the project.</p>\n</blockquote>\n<h1>Some more example screenshots: 📸</h1>\n<p>The source code for all these examples are here: <a href=\"https://github.com/nodegui/react-desktop/tree/master/examples/\">https://github.com/nodegui/react-desktop/tree/master/examples/</a></p>\n<div style=\"display:flex;flex-direction:row;justify-content:space-around;\">\n  <img src=\"/fc7d4b62154c0349de95b6bee6b04854/image_view_win.gif\" alt=\"win\" height=\"250px\">\n  <img src=\"/cff49b306f38d7350ede3795e42320f7/image_view_linux.gif\" alt=\"linux\" height=\"250px\">\n  <img src=\"/c7c213209aa96a3071f2be02326e4515/image_view_mac.gif\" alt=\"mac\" height=\"250px\">\n</div>\n<div><center><i><b>Image Viewer: win, linux and mac</b></i></center></div>\n<br>\n<br>\n<div style=\"display:flex;flex-direction:row;justify-content:space-around;\">\n  <img src=\"/7eaa5a30bb452c3f1091ef2a58ea0478/weather_widget_mac.gif\" alt=\"win\" height=\"350px\">\n  <img src=\"/ad030801e31a4e5e0cb1366982840321/kitchen.gif\" alt=\"mac\" height=\"350px\">\n</div>\n<div><center><i><b>More examples: A weather widget  &amp; kitchen app</b></i></center></div>\n<h1>Development and Support 🍺</h1>\n<p>NodeGui and React Desktop are open source projects. If you like where these projects are heading please do <a href=\"https://github.com/nodegui/nodegui\"><img src=\"/024cddd7b4bc46b58b063c5596d9634b/star.gif\" height=\"30\" style=\"position:relative;top:10px\"></a> the respective repos.</p>\n<p>The code is structured for simplicity such that anyone who is willing to contribute can get started quickly. There is also a decent contributor’s guide which also contains links to blog posts that can get you started even if you have no clue about nodejs addons, etc. I would suggest you to give it a shot. If anything is unclear you can raise an issue on the respective project repos on Github and we would be more than happy to help. We aim to make the project easy to develop and use. Hence, pull requests are always welcome.</p>\n<p>If you can support the project financially 💰 please hit the <a href=\"https://github.com/nodegui/nodegui\"><img src=\"/bdc53875196e423d92bc2eacc3dd82f1/sponsor.gif\" height=\"30\" style=\"position:relative;top:10px\"></a> button on the Github repo.</p>\n<p>I hope we can build an awesome library together ❤ Cheers 🍺</p>","frontmatter":{"title":"🐕 Announcing NodeGUI and React Desktop - Build native desktop apps with Javascript and CSS 🎉","date":"August 14, 2019","keywords":"react, desktop, gui, cross, platform, javascript, css, native","featuredImage":{"childImageSharp":null}},"fields":{"slug":"/nodegui-intro/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/nodegui-intro/","previous":{"fields":{"slug":"/react-hooks-hocs/"},"frontmatter":{"title":"⚛️ Using React hooks for functional components with perfect fallback for class components."}},"next":null}}}